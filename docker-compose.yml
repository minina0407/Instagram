version: '3'
services:
  app:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - grafana
      - prometheus
      - influxdb  # InfluxDB 서비스에 의존
    container_name: Portfogram
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
    networks:
      - springboot-mysql-net

  redis:
    image: redis
    container_name: redis-container
    ports:
      - "6380:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - springboot-mysql-net

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    ports:
      - "8001:8001"
    networks:
      - springboot-mysql-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    ports:
      - "3001:3000"
    networks:
      - springboot-mysql-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-container
    ports:
      - "9090:9090"
    volumes:
      - ./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - springboot-mysql-net

  influxdb:
    image: influxdb:1.8  # InfluxDB 버전 1.8 이미지 사용
    container_name: influxdb-container
    ports:
      - "8086:8086"  # InfluxDB HTTP API 포트
    environment:
      - INFLUXDB_DB=k6 # 원하는 데이터베이스 이름 지정
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpassword
    networks:
      - springboot-mysql-net

networks:
  springboot-mysql-net:
    driver: bridge
