# GitHub Actions를 사용한 CI/CD

name: CI/CD using GitHub Actions

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Initialize Gradle Wrapper
        run: ./gradlew wrapper --gradle-version 7.6.1

      - name: Create application.properties for main branch
        if: contains(github.ref, 'main')
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.properties }}" > src/main/resources/application.properties

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      - name: Copy JAR file to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_PASSWORD }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app.jar"

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /home/ubuntu
            java -jar -Dspring.config.location=./application.properties -Duser.timezone=Asia/Seoul app.jar &
