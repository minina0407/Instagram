name: Deploy to AWS CodeDeploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
     
     
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew


      - name: Create deployment directory
        run: mkdir -p /home/runner/PortfoGram/PortfoGram
        
      - name: Set up Gradle
        run: |
          cd /home/runner/PortfoGram/PortfoGram
          wget https://services.gradle.org/distributions/gradle-7.6.1-bin.zip
          unzip -d $HOME/gradle gradle-7.6.1-bin.zip
          echo "export PATH=\$PATH:$HOME/gradle/gradle-7.6.1/bin" >> $HOME/.bashrc
      
      - name: Create application.properties for main branch
        if: contains(github.ref, 'main')
        run: |
          cd /home/runner/PortfoGram/PortfoGram
          mkdir -p src/main/resources
          echo "${{ secrets.properties }}" > src/main/resources/application.properties
      
      - name: Initialize Gradle Wrapper
        run: |
          cd /home/runner/PortfoGram/PortfoGram
          echo "include ':app'" > settings.gradle
        shell: bash

      - name: Build with Gradle
        run: |
          cd /home/runner/PortfoGram/PortfoGram
          $HOME/gradle/gradle-7.6.1/bin/gradle build
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/17.0.7-7/x64


      - name: Copy JAR file to EC2 instance
        uses: appleboy/scp-action@master
        with:
              host: ${{ secrets.SERVER_HOST }}
              username: ${{ secrets.SERVER_USERNAME }}
              key: ${{ secrets.SERVER_SSH_KEY }}
              passphrase: ${{ secrets.SERVER_PASSWORD }}
              script: |
                mkdir -p /home/runner/PortfoGram/PortfoGram
                cp /home/ubuntu/app.jar /home/runner/PortfoGram/PortfoGram/app.jar
                # 서버 시작
                cd /home/runner/PortfoGram/PortfoGram
                java -jar -Dspring.config.location=./application.properties -Duser.timezone=Asia/Seoul app.jar &
