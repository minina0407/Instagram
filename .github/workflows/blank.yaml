# The name that will appear on the github repository actions page
name: CI/CD using github actions

# event trigger
# Executed when a push is made to the main or develop branch
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

      # JDK setting - JDK settings to be used in github actions (It doesn't matter if it is different from the project or AWS java version)
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # gradle caching - improve build times
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Create properties file for each environment (1) - application.properties
      - name: make application.properties
        if: |
          contains(github.ref, 'main')
        run: |
          mkdir ./src/main/resources # create resources folder
          cd ./src/main/resources # go to resources folder
          touch ./application.properties # create application.properties
          echo "${{ secrets.properties }}" > ./application.properties # Write values ​​set in github actions to application.properties file
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test
          
      - name: Copy JAR file to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_PASSWORD }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app.jar"

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /home/ubuntu
            java -jar -Dspring.config.location=./application.properties -Duser.timezone=Asia/Seoul app.jar
